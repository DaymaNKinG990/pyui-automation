[project]
name = "pyui-automation"
version = "0.2.0"
description = "Cross-platform desktop/Qt UI automation library"
authors = [{ name = "Ravil Shakerov", email = "xellaopromaster@yandex.ru" }]
requires-python = ">=3.10"
license = { text = "MIT" }
readme = "README.md"
dependencies = [
    "colour>=0.1.5",
    "comtypes>=1.4.11; sys_platform == 'win32'",
    "pywin32>=311; sys_platform == 'win32'",
    "python-xlib>=0.33; sys_platform == 'linux'",
    "pygobject>=3.52.3; sys_platform == 'linux'",
    "pyobjc-framework-Cocoa>=11.1; sys_platform == 'darwin'",
    "pyobjc-framework-Quartz>=11.1; sys_platform == 'darwin'",
    "markdown>=3.8.2",
    "matplotlib>=3.10.3",
    "mypy>=1.17.0",
    "numpy>=2.0.0,<2.3.0",
    "opencv-contrib-python>=4.12.0.88",
    "pillow>=11.3.0",
    "plotly>=6.2.0",
    "psutil>=7.0.0",
    "pyautogui>=0.9.54",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-xdist>=3.8.0",
    "setuptools>=80.9.0",
    "ty>=0.0.1a15",
    "pyrefly>=0.25.0",
    "pre-commit>=4.2.0",
    "pyright>=1.1.403",
    "paddleocr>=2.10.0",
    "paddlepaddle>=3.1.0",
    "ruff>=0.12.5",
]
keywords = [
    "ui automation",
    "testing",
    "gui testing",
    "automation",
    "accessibility testing",
    "visual testing",
    "performance testing",
    "ocr",
    "cross-platform"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X"
]

[project.optional-dependencies]
ocr = [
    "paddleocr>=2.10.0",
    "paddlepaddle-gpu>=2.6.2; sys_platform == 'win32' or sys_platform == 'linux'",
    "paddlepaddle>=2.6.2; sys_platform == 'darwin'"
]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q --cov=pyui_automation --cov-report=term-missing"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pyright]
include = ["pyui_automation"]
exclude = ["tests", "docs", "**/__pycache__", "**/*.pyc"]
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true

[tool.setuptools]
packages = ["pyui_automation"]

[tool.ty.rules]
# Игнорировать ошибки импорта для Windows-специфичных модулей
unresolved-import = "ignore"
invalid-assignment = "ignore"
possibly-unbound-attribute = "ignore"

# Игнорировать ошибки с override
unresolved-reference = "ignore"
